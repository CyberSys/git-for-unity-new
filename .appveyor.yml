image: Visual Studio 2017
environment:
  matrix:
    - node_version: '8'

configuration: Release

install:
- ps: Install-Product node 8 x64
- ps: scripts\Get-Deps.ps1

before_build:
- appveyor-retry nuget restore
- appveyor-retry dotnet restore -v Minimal

build_script:
- .\build -c %CONFIGURATION%

test:
  assemblies:
    except:
      - '**\*Unity*.dll'
      - '**\*.TestRunner.dll'
      - '**\TestUtils.dll'
  categories:
    except:
    - DoNotRunOnAppVeyor

after_test:
- .\pack -c %CONFIGURATION%

artifacts:
- path: upm-ci~\packages\*
  name: npm
- path: build\nuget\**\*nupkg
  name: nuget


# on_success:
# - ps: |

#     $version = $env:APPVEYOR_BUILD_VERSION

#     Write-Output "Packaging version $($env:GitAssemblyInformationalVersion) ($version)"

#     scripts\Create-Packages.ps1 $version -SkipUpm

#     # save commit and binaries
#     $sourcedir="$($env:appveyor_build_folder)\build\Release"
#     $commitfile="$sourcedir\commit"
#     Add-Content $commitfile $appveyor_repo_commit

#     $dllzip="$($env:appveyor_build_folder)\artifacts\binaries-$version.zip"
#     Write-Output "Zipping $sourcedir to $dllzip"
#     7z a $dllzip $sourcedir

# on_finish:
# - ps: |
#     Set-Location $env:appveyor_build_folder
#     $manifest = "$($env:appveyor_build_folder)\artifacts\manifest.json"
#     scripts\Upload-ToAppveyor.ps1 $manifest
#     Get-ChildItem $env:appveyor_build_folder\build\*.log | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName logs }
#     Get-ChildItem $env:appveyor_build_folder\artifacts\binaries*.zip | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName binaries }
