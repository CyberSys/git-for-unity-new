<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <SourceDir Condition="'$(SourceDir)' == '' ">$(SolutionDir)\src\Assets\Editor</SourceDir>
    <PublishTo Condition="'$(PublishTo)' == '' ">$(SolutionDir)\unity\PackageProject\Assets\Plugins\GitHub\Editor</PublishTo>
    <ExternalPublishTo>$(SolutionDir)..\github-unity-test\GitHubExtensionProject\Assets\Plugins\GitHub\Editor</ExternalPublishTo>
  </PropertyGroup>

  <!-- After the build is done, we copy all the artifacts into two locations:
         1) ..\github-unity-test\GitHubExtensionProject - an empty unity project for testing
         2) unity\PackageProject - the project we use for packaging
      and then we copy the meta files from the unity\PackageProject to github-unity-test
  -->
  <Target Name="AfterBuild">

    <CreateItem Include="$(SourceDir)\**\*.*">
      <Output TaskParameter="Include" ItemName="ToCopy" />
    </CreateItem>

    <!-- Copy all the DLLs to the unity\PackageProject folder for later packaging -->
    <Copy
      SourceFiles="@(ToCopy)"
      DestinationFiles="@(ToCopy->'$(PublishTo)\%(RecursiveDir)%(Filename)%(Extension)')"
      Condition="!$([System.String]::Copy('%(Filename)').Contains('deleteme')) and !$([System.String]::Copy('%(Extension)').Contains('xml'))" />

    <CreateItem Include="$(PublishTo)\**\*.*">
      <Output TaskParameter="Include" ItemName="PackageFilesToCopy" />
    </CreateItem>

    <!-- Copy all the DLLs  and meta files to the ..\github-unity-test folder, creating an empty Unity project with the extension ready for testing -->
    <Copy
      SourceFiles="@(PackageFilesToCopy)"
      DestinationFiles="@(PackageFilesToCopy->'$(ExternalPublishTo)\%(RecursiveDir)%(Filename)%(Extension)')"
      Retries="0"
      ContinueOnError="WarnAndContinue" />

  </Target>

</Project>