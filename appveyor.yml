environment:
  matrix:
    - node_version: '8'

install:
- ps: |
    $version = Get-Content "$($env:appveyor_build_folder)\common\SolutionInfo.cs" | %{ $regex = "private const string [\w]+Version = `"([^`"]*)`""; if ($_ -match $regex) { $matches[1] } }
    $env:package_version="$($version).$($env:APPVEYOR_BUILD_NUMBER)"
    Update-AppveyorBuild -Version $env:package_version
    $message = "Building "
    $message += " version " + $env:package_version + " "
    Write-Host $message

    $destdir = Join-Path $env:appveyor_build_folder 'lib'
    $destfile = Join-Path $destdir 'deps.zip'
    Set-Location $destdir
    Invoke-WebRequest "https://ghfvs-installer.github.com/dependencies/deps.zip" -OutFile $destfile
    &'7z' -bb3 x 'deps.zip'

    Set-Location $env:appveyor_build_folder

    hMSBuild.bat /t:restore

assembly_info:
  patch: false
  file: common\SolutionInfo.cs
  assembly_informational_version: "{version}"

configuration: Release
build:
  project: GitForUnity.sln
  verbosity: minimal
test:
  assemblies:
    except:
      - '**\*.TestRunner.dll'
      - '**\*.TestUtils.dll'
  categories:
    except:
    - DoNotRunOnAppVeyor
on_success:
- ps: |
    # save commit
    Add-Content $commitfile $appveyor_repo_commit

    Write-Output "Zipping $sourcedir to $zipfile"
    7z a $zipfile $sourcedir

    Write-Output "Uploading $zipfile"
    Push-AppveyorArtifact $zipfile -DeploymentName source
    Push-AppveyorArtifact $packagefile -DeploymentName package
    Push-AppveyorArtifact "$($packagefile).md5" -DeploymentName package
on_finish:
- ps: |
    Set-Location $env:appveyor_build_folder
    Get-ChildItem $env:appveyor_build_folder\build\*.log | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName logs }
